/* PAGE-SPECIFIC STYLES FOR THE HOME PAGE */

/*-- -------------------------- -->
<---       Side By Side         -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #sbs-578 {
        .cs-container {
            width: 100%;
            max-width: calc(1280 / 16 * 1rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 7vw, 4rem);
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: left;
            width: 100%;
            max-width: calc(522 / 16 * 1rem);
            /* moved section padding to the .cs-content so we can have the cs-picture be full width on mobile without the padding preventing it from doing so */
            padding: var(--sectionPadding);
            padding-top: 0;
            /* prevents padding from affecting width and height */
            box-sizing: border-box;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: flex-start;
        }

        .cs-text {
            margin-bottom: calc(16 / 16 * 1rem);
            &:last-of-type {
                margin-bottom: calc(32 / 16 * 1rem);
            }
        }

        .cs-button-solid {
            font-size: calc(16 / 16 * 1rem);
            /* 46px - 56px */
            line-height: clamp(2.875rem, 5.5vw, 3.5rem);
            text-decoration: none;
            font-weight: 700;
            text-align: center;
            margin: 0;
            color: #fff;
            min-width: calc(150 / 16 * 1rem);
            padding: 0 calc(24 / 16 * 1rem);
            background-color: var(--primary);
            border-radius: calc(4 / 16 * 1rem);
            display: inline-block;
            position: relative;
            z-index: 1;
            /* prevents padding from adding to the width */
            box-sizing: border-box;

            &:before {
                content: "";
                position: absolute;
                height: 100%;
                width: 0%;
                background: #000;
                opacity: 1;
                top: 0;
                left: 0;
                z-index: -1;
                border-radius: calc(4 / 16 * 1rem);
                transition: width 0.3s;
            }

            &:hover {
                &:before {
                    width: 100%;
                }
            }
        }

        .cs-picture {
            display: block;
            position: relative;
            width: 100%;
            height: calc(300 / 16 * 1rem);

            img {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                object-fit: cover;
            }
        }
    }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #sbs-578 {
        padding: var(--sectionPadding);

        .cs-container {
            flex-direction: row;
            justify-content: flex-start;
            /* 60px - 128px */
            gap: clamp(3.75rem, 10vw, 8rem);
        }

        .cs-content {
            width: 53%;
            /* reset the padding, add the section padding back to the section container */
            padding: 0;
        }

        .cs-picture {
            width: 47vw;
            max-width: calc(494 / 16 * 1rem);
            /* 518px - 700px */
            height: clamp(32.375rem, 63vw, 43.75rem);
            /* 16px - 28px, added margin left and bottom to cs-picture so it pushes away by the same amount the yellow box element overlaps it left and bottom. This maintains consistent spacing left and bottom */
            margin: 0 0 clamp(1rem, 2.4vw, 1.75rem) clamp(1rem, 2.4vw, 1.75rem);
            position: relative;

            &:before {
                /* yellow box */
                content: "";
                width: 50%;
                height: 60%;
                background: var(--secondary);
                opacity: 1;
                display: block;
                position: absolute;
                /* 16px - 28px, wrapped in calc function to multiple by negative 1 and get a negative clamp value */
                bottom: calc(clamp(1rem, 2.4vw, 1.75rem) * -1);
                left: calc(clamp(1rem, 2.4vw, 1.75rem) * -1);
            }
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #sbs-578 {
            .cs-topper {
                color: var(--bodyTextColorWhite);
            }

            .cs-title,
            .cs-text {
                color: var(--bodyTextColorWhite);
            }

            .cs-text {
                opacity: 0.8;
            }

            .cs-picture {
                &:before {
                    background-color: var(--accent);
                }
            }
        }
    }
}

/*-- -------------------------- -->
<---          Gallery           -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #gallery-45 {
        padding: var(--sectionPadding);
        position: relative;
        /* Prevents overflow from the image going off screen */
        overflow: hidden;

        .cs-container {
            width: 100%;
            max-width: calc(1280 / 16 * 1rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: center;
            width: 100%;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: center;
        }

        .cs-image-group {
            margin: 0;
            padding: 0;
            width: 100%;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 16px - 20px */
            gap: clamp(1rem, 1.5vw, 1.25rem);
        }

        .cs-item {
            list-style: none;
            width: 100%;
            height: 100%;
            aspect-ratio: 1;
            margin: 0;
            position: relative;
            display: block;

            &:hover {
                .cs-hover-box {
                    opacity: 1;
                }

                .cs-icon {
                    /* return to original position */
                    transform: rotateY(0);
                }

                .cs-h3 {
                    opacity: 1;
                    /* Return to original position */
                    transform: translateY(0);
                }

                .cs-hover-box-text {
                    opacity: 1;
                    /* Return to original position */
                    transform: translateY(0);
                }
            }
        }

        .cs-picture {
            margin: auto;
            width: 100%;
            height: 100%;
            display: block;
            position: relative;

            img {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                object-fit: cover;
            }
        }

        .cs-button-solid {
            font-size: calc(16 / 16 * 1rem);
            /* 46px - 56px */
            line-height: clamp(2.875rem, 5.5vw, 3.5rem);
            text-decoration: none;
            font-weight: 700;
            text-align: center;
            margin: 0;
            color: #fff;
            min-width: calc(150 / 16 * 1rem);
            padding: 0 calc(24 / 16 * 1rem);
            background-color: var(--primary);
            border-radius: calc(4 / 16 * 1rem);
            display: inline-block;
            position: relative;
            z-index: 1;
            /* prevents padding from adding to the width */
            box-sizing: border-box;

            &:before {
                content: "";
                position: absolute;
                height: 100%;
                width: 0%;
                background: #000;
                opacity: 1;
                top: 0;
                left: 0;
                z-index: -1;
                border-radius: calc(4 / 16 * 1rem);
                transition: width 0.3s;
            }

            &:hover {
                &:before {
                    width: 100%;
                }
            }
        }
    }
}

/* In Between - 600px */
@media only screen and (min-width: 37.5rem) {
    #gallery-45 {
        .cs-image-group {
            display: grid;
            grid-template-columns: repeat(12, 1fr);
            grid-template-rows: 1fr;
        }

        .cs-item {
            grid-column: span 6;
        }
    }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #gallery-45 {
        .cs-item {
            grid-column: span 3;
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #gallery-45 {
            .cs-title,
            .cs-text {
                color: var(--bodyTextColorWhite);
            }

            .cs-text {
                opacity: 0.8;
            }
        }
    }
}
